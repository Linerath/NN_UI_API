<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>